buildscript {
    repositories {
        mavenLocal()
    }
    dependencies {
        classpath 'edu.ucr.cs.riple:NullAwayAutoFixer:1.0-SNAPSHOT'
    }
}

plugins {
    id 'maven-publish'
    id 'signing'
    id 'maven'
    id 'java'
    id("net.ltgt.errorprone") version "0.6"
}

repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: 'edu.ucr.cs.riple.plugin'

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
    exclude 'com/fasterxml/jackson/**'
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
    dependsOn javadoc
}

publishing {
    repositories {
        maven {
            name = 'mvnCentral'
            url = mavenCentralUrl
            credentials {
                username = System.getenv('SONATYPE_USER')
                password = System.getenv('SONATYPE_PASS')
            }
        }
    }
    publications {
        external(MavenPublication) {
            artifactId = rootProject.name
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = rootProject.name
                description = pomDescription
                url = pomURL
                scm {
                    url = pomScmURL
                }
                developers {
                    developer {
                        id = pomDevId
                        name = pomDevName
                        organization = pomDevName
                        organizationUrl = pomDevOrgURL
                    }
                }
                licenses {
                    license {
                        name = pomLicenseName
                        url = pomLicenseUrl
                    }
                }
            }
        }
    }
}

signing {
    required {
        tasks.withType(PublishToMavenRepository).find {
            gradle.taskGraph.hasTask it
        }
    }
    sign publishing.publications
}

dependencies {
    api "com.adobe.experiencecloud.ecid:ecid-service:1.0.0"
    implementation "org.slf4j:slf4j-api:2.0.0-alpha0"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.10.0.pr3"
    implementation "com.fasterxml.jackson.core:jackson-core:2.9.8"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.9.8"
    implementation "com.konghq:unirest-java:3.0.00"

    testImplementation "org.slf4j:slf4j-simple:2.0.0-alpha0"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.5.2"
    testImplementation "org.mockito:mockito-junit-jupiter:3.0.0"

    annotationProcessor "edu.ucr.cs.riple:nullaway:0.7.12-SNAPSHOT"

    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
    errorprone "com.google.errorprone:error_prone_core:2.3.2"
    errorproneJavac "com.google.errorprone:javac:9+181-r4173-1"
}


import net.ltgt.gradle.errorprone.CheckSeverity;
tasks.withType(JavaCompile) {
    // remove the if condition if you want to run NullAway on test code
    if (!name.toLowerCase().contains("test")) {
        options.errorprone {
            check("NullAway", CheckSeverity.ERROR)
            option("NullAway:AnnotatedPackages", "com.adobe.target")
            option("NullAway:AutoFix", "true")
        }
        options.compilerArgs << "-Xmaxerrs" << "100000"
    }
}

test {
    useJUnitPlatform()
}
